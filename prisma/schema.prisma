// schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Entity {
  id_entity        Int       @id @default(autoincrement())
  document_type    Int       @default(1) // 1: DNI, 2: RUC
  document_number  String    @db.VarChar(11)
  person_type      Int       @default(1) // 1: Natural, 2: Jurídico
  last_name        String    @db.VarChar(200) // Apellidos/Razón Social
  first_name       String    @db.VarChar(200) // Nombres/Nombre Comercial
  address          String?   @db.VarChar(200)
  phone_number     String?   @db.VarChar(15)
  created_at       DateTime  @default(now())
  updated_at       DateTime  @default(now()) @updatedAt

  Clients          Client[]
  Employees        Employee[]
  Suppliers        Supplier[]
}

model Channel {
  id_channel       Int       @id @default(autoincrement())
  channel_name     String    @db.VarChar(200)
  channel_type     Int       @default(1) // 1: Cliente, 2: Trabajador
  created_at       DateTime  @default(now())
  updated_at       DateTime  @default(now()) @updatedAt

  Clients          Client[]
  Employees        Employee[]
}

model Client {
  id_client        Int       @id @default(autoincrement())
  id_entity        Int?
  id_channel       Int
  document_type    Int       @default(1) // 1: DNI, 2: RUC
  document_number  String    @db.VarChar(11)
  person_type      Int       @default(1) // 1: Natural, 2: Jurídico
  last_name        String    @db.VarChar(200) // Apellidos/Razón Social
  first_name       String?   @db.VarChar(200) // Nombres/Nombre Comercial
  phone_number     String?   @db.VarChar(15)
  phone_number2    String?   @db.VarChar(15)
  zone             String?   @db.VarChar(200)
  address          String?   @db.VarChar(200)
  province         String?   @db.VarChar(200)
  district         String?   @db.VarChar(200)
  created_at       DateTime  @default(now())
  updated_at       DateTime  @default(now()) @updatedAt

  entity           Entity?   @relation(fields: [id_entity], references: [id_entity])
  channel          Channel   @relation(fields: [id_channel], references: [id_channel])
  Sales            Sale[]

  @@index([id_channel])
  @@index([id_entity])
}

model Employee {
  id_employee      Int       @id @default(autoincrement())
  id_entity        Int?
  id_channel       Int
  document_type    Int       @default(1) // 1: DNI, 2: RUC
  document_number  String    @db.VarChar(11)
  last_name        String    @db.VarChar(200) // Apellidos
  first_name       String?   @db.VarChar(200) // Nombres
  phone_number     String?   @db.VarChar(15)
  phone_number2    String?   @db.VarChar(15)
  address          String?   @db.VarChar(200)
  created_at       DateTime  @default(now())
  updated_at       DateTime  @default(now()) @updatedAt

  entity           Entity?   @relation(fields: [id_entity], references: [id_entity])
  channel          Channel   @relation(fields: [id_channel], references: [id_channel])
  Sales            Sale[]
  SalePayments     SalePayment[]

  @@index([id_channel])
  @@index([id_entity])
}

model Sale {
  id_sale          Int       @id @default(autoincrement())
  id_employee      Int
  id_client        Int
  receipt_type     String?   @db.VarChar(50) // Factura/Ticket, etc.
  receipt_number   String    @db.VarChar(50) @unique
  receipt_date     DateTime  @default(now())
  total_amount     Decimal     @db.Decimal(14, 2)
  status           Boolean   @default(false) // Si el monto total fue cancelado
  created_at       DateTime  @default(now())
  updated_at       DateTime  @default(now()) @updatedAt

  employee         Employee  @relation(fields: [id_employee], references: [id_employee])
  client           Client    @relation(fields: [id_client], references: [id_client])
  SalePayments     SalePayment[]

  @@index([id_employee])
  @@index([id_client])
}

model SalePayment {
  id_payment               Int       @id @default(autoincrement())
  id_sale                  Int
  id_employee              Int
  payment_registration_date DateTime @default(now())
  description              String?
  payment_amount           Decimal   @db.Decimal(14, 2)
  is_credit_note           Boolean   @default(false)
  payment_receipt_number   String?   @default("")  // Eliminar la anotación @db.VarChar
  created_at               DateTime  @default(now())
  updated_at               DateTime  @default(now()) @updatedAt

  sale                     Sale      @relation(fields: [id_sale], references: [id_sale])
  employee                 Employee  @relation(fields: [id_employee], references: [id_employee])

  @@index([id_sale])
  @@index([id_employee])
}



model Supplier {
  id_supplier     Int       @id @default(autoincrement())
  id_entity       Int?
  ruc             String    @db.VarChar(11)
  supplier_name   String    @db.VarChar(255)
  legal_name      String?   @db.VarChar(255)
  phone_number    String    @db.VarChar(15)
  phone_number2   String?   @db.VarChar(15)
  created_at      DateTime  @default(now())
  updated_at      DateTime  @default(now()) @updatedAt

  entity          Entity?   @relation(fields: [id_entity], references: [id_entity])
  PurchaseOrders  PurchaseOrder[]

  @@index([id_entity])
}

model CostCenter {
  id_center       Int       @id @default(autoincrement())
  id_father_center Int?
  cost_center_name String   @db.VarChar(255)
  created_at      DateTime  @default(now())
  updated_at      DateTime  @default(now()) @updatedAt

  father_center   CostCenter? @relation("CostCenterToFather", fields: [id_father_center], references: [id_center])
  child_centers   CostCenter[] @relation("CostCenterToFather")
  PurchaseRequests PurchaseRequest[]

  @@index([id_father_center])
}

model PurchaseRequest {
  id_request         Int       @id @default(autoincrement())
  id_cost_center     Int
  request_date       DateTime
  item               String    @db.VarChar(255)
  description        String?
  quantity           Decimal   @db.Decimal(10, 2)
  unit_of_measurement String    @db.VarChar(50)
  planned_cost       Decimal   @db.Decimal(12, 2)
  is_approved        Boolean   @default(false)  // Por defecto false, manejar en código o trigger la lógica condicional
  is_active          Boolean   @default(true)   // Por defecto activo (true)
  created_at         DateTime  @default(now())
  updated_at         DateTime  @default(now()) @updatedAt

  cost_center        CostCenter @relation(fields: [id_cost_center], references: [id_center])
  PurchaseOrders     PurchaseOrder[]

  @@index([id_cost_center])
}


model PurchaseOrder {
  id_order        Int       @id @default(autoincrement())
  id_request      Int
  id_supplier     Int
  order_date      DateTime
  total_amount    Decimal   @db.Decimal(12, 2)
  is_active          Boolean   @default(true)   // Por defecto activo (true)

  created_at      DateTime  @default(now())
  updated_at      DateTime  @default(now()) @updatedAt

  request         PurchaseRequest @relation(fields: [id_request], references: [id_request])
  supplier        Supplier        @relation(fields: [id_supplier], references: [id_supplier])
  PurchaseShipments PurchaseShipment[]

  @@index([id_request])
  @@index([id_supplier])
}

model PurchaseShipment {
  id_shipment     Int       @id @default(autoincrement())
  id_order        Int
  shipment_date   DateTime
  receipt_type    String?   @db.VarChar(50)
  receipt_number  String    @db.VarChar(50) @unique
  payment_type    String    @db.VarChar(50)
  payment_due_date DateTime
  payment_status  Boolean   @default(false) // true is canceled
  is_active          Boolean   @default(true)   // Por defecto activo (true)
  created_at      DateTime  @default(now())
  updated_at      DateTime  @default(now()) @updatedAt

  order           PurchaseOrder @relation(fields: [id_order], references: [id_order])
  ShipmentPayments ShipmentPayment[]

  @@index([id_order])
}

model ShipmentPayment {
  id_payment            Int       @id @default(autoincrement())
  id_shipment           Int
  payment_date          DateTime
  payment_amount        Decimal   @db.Decimal(14, 2)
  description           String?   @db.Text
  is_credit_note        Boolean   @default(false) 
  payment_receipt_number String?  
  created_at            DateTime  @default(now())
  updated_at            DateTime  @default(now()) @updatedAt

  shipment              PurchaseShipment @relation(fields: [id_shipment], references: [id_shipment])

  @@index([id_shipment])
}


